{
    "Resources": {
      "DynamoDbMessagesBEEF2A4C": {
        "Type": "AWS::DynamoDB::Table",
        "Properties": {
          "AttributeDefinitions": [
            {
              "AttributeName": "id",
              "AttributeType": "S"
            },
            {
              "AttributeName": "created_at",
              "AttributeType": "N"
            }
          ],
          "BillingMode": "PAY_PER_REQUEST",
          "KeySchema": [
            {
              "AttributeName": "id",
              "KeyType": "HASH"
            },
            {
              "AttributeName": "created_at",
              "KeyType": "RANGE"
            }
          ]
        },
        "UpdateReplacePolicy": "Delete",
        "DeletionPolicy": "Delete",
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/DynamoDbMessages/Resource"
        }
      },
      "Vpc8118EB11": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": "10.2.0.0/16",
          "EnableDnsHostnames": true,
          "EnableDnsSupport": true,
          "InstanceTenancy": "default",
          "Tags": [
            {
              "Key": "Name",
              "Value": "primary-vpc"
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/Resource"
        }
      },
      "VpcPublicSubnet1Subnet5C2D37C4": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": "ap-southeast-2a",
          "CidrBlock": "10.2.0.0/24",
          "MapPublicIpOnLaunch": true,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Public"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Public"
            },
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PublicSubnet1"
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet1/Subnet"
        }
      },
      "VpcPublicSubnet1RouteTable6C95E38E": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PublicSubnet1"
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet1/RouteTable"
        }
      },
      "VpcPublicSubnet1RouteTableAssociation97140677": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
          },
          "SubnetId": {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet1/RouteTableAssociation"
        }
      },
      "VpcPublicSubnet1DefaultRoute3DA9E72A": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "VpcIGWD7BA715C"
          },
          "RouteTableId": {
            "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
          }
        },
        "DependsOn": ["VpcVPCGWBF912B6E"],
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet1/DefaultRoute"
        }
      },
      "VpcPublicSubnet1EIPD7E02669": {
        "Type": "AWS::EC2::EIP",
        "Properties": {
          "Domain": "vpc",
          "Tags": [
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PublicSubnet1"
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet1/EIP"
        }
      },
      "VpcPublicSubnet1NATGateway4D7517AA": {
        "Type": "AWS::EC2::NatGateway",
        "Properties": {
          "AllocationId": {
            "Fn::GetAtt": ["VpcPublicSubnet1EIPD7E02669", "AllocationId"]
          },
          "SubnetId": {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PublicSubnet1"
            }
          ]
        },
        "DependsOn": [
          "VpcPublicSubnet1DefaultRoute3DA9E72A",
          "VpcPublicSubnet1RouteTableAssociation97140677"
        ],
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet1/NATGateway"
        }
      },
      "VpcPublicSubnet2Subnet691E08A3": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": "ap-southeast-2b",
          "CidrBlock": "10.0.1.0/24",
          "MapPublicIpOnLaunch": true,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Public"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Public"
            },
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PublicSubnet2"
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet2/Subnet"
        }
      },
      "VpcPublicSubnet2RouteTable94F7E489": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PublicSubnet2"
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet2/RouteTable"
        }
      },
      "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "VpcPublicSubnet2RouteTable94F7E489"
          },
          "SubnetId": {
            "Ref": "VpcPublicSubnet2Subnet691E08A3"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet2/RouteTableAssociation"
        }
      },
      "VpcPublicSubnet2DefaultRoute97F91067": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "VpcIGWD7BA715C"
          },
          "RouteTableId": {
            "Ref": "VpcPublicSubnet2RouteTable94F7E489"
          }
        },
        "DependsOn": ["VpcVPCGWBF912B6E"],
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PublicSubnet2/DefaultRoute"
        }
      },
      "VpcPrivateSubnet1Subnet536B997A": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": "ap-southeast-2a",
          "CidrBlock": "10.0.2.0/24",
          "MapPublicIpOnLaunch": false,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Private"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Private"
            },
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PrivateSubnet1"
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PrivateSubnet1/Subnet"
        }
      },
      "VpcPrivateSubnet1RouteTableB2C5B500": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PrivateSubnet1"
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PrivateSubnet1/RouteTable"
        }
      },
      "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
          },
          "SubnetId": {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PrivateSubnet1/RouteTableAssociation"
        }
      },
      "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
          },
          "RouteTableId": {
            "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PrivateSubnet1/DefaultRoute"
        }
      },
      "VpcPrivateSubnet2Subnet3788AAA1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": "ap-southeast-2b",
          "CidrBlock": "10.0.3.0/24",
          "MapPublicIpOnLaunch": false,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Private"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Private"
            },
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PrivateSubnet2"
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PrivateSubnet2/Subnet"
        }
      },
      "VpcPrivateSubnet2RouteTableA678073B": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "EcsFargateStack/Vpc/PrivateSubnet2"
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PrivateSubnet2/RouteTable"
        }
      },
      "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "VpcPrivateSubnet2RouteTableA678073B"
          },
          "SubnetId": {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PrivateSubnet2/RouteTableAssociation"
        }
      },
      "VpcPrivateSubnet2DefaultRoute060D2087": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
          },
          "RouteTableId": {
            "Ref": "VpcPrivateSubnet2RouteTableA678073B"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/PrivateSubnet2/DefaultRoute"
        }
      },
      "VpcIGWD7BA715C": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "primary-vpc"
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/IGW"
        }
      },
      "VpcVPCGWBF912B6E": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "InternetGatewayId": {
            "Ref": "VpcIGWD7BA715C"
          },
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/VPCGW"
        }
      },
      "VpcRestrictDefaultSecurityGroupCustomResourceC73DA2BE": {
        "Type": "Custom::VpcRestrictDefaultSG",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
              "Arn"
            ]
          },
          "DefaultSecurityGroupId": {
            "Fn::GetAtt": ["Vpc8118EB11", "DefaultSecurityGroup"]
          },
          "Account": "[account_id]"
        },
        "UpdateReplacePolicy": "Delete",
        "DeletionPolicy": "Delete",
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Vpc/RestrictDefaultSecurityGroupCustomResource/Default"
        }
      },
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ]
          },
          "ManagedPolicyArns": [
            {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            }
          ],
          "Policies": [
            {
              "PolicyName": "Inline",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "ec2:AuthorizeSecurityGroupIngress",
                      "ec2:AuthorizeSecurityGroupEgress",
                      "ec2:RevokeSecurityGroupIngress",
                      "ec2:RevokeSecurityGroupEgress"
                    ],
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:ec2:ap-southeast-2:[account_id]:security-group/",
                            {
                              "Fn::GetAtt": [
                                "Vpc8118EB11",
                                "DefaultSecurityGroup"
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
        }
      },
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": "cdk-hnb659fds-assets-[account_id]-ap-southeast-2",
            "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
          },
          "Timeout": 900,
          "MemorySize": 128,
          "Handler": "__entrypoint__.handler",
          "Role": {
            "Fn::GetAtt": [
              "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
              "Arn"
            ]
          },
          "Runtime": "nodejs20.x",
          "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
        },
        "DependsOn": [
          "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
        ],
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
          "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
          "aws:asset:property": "Code"
        }
      },
      "EcsSecurityGroup44008BF1": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "EcsFargateStack/EcsSecurityGroup",
          "GroupName": "SimpleEcs-Dev-SecGroup",
          "SecurityGroupEgress": [
            {
              "CidrIp": "255.255.255.255/32",
              "Description": "Disallow all traffic",
              "FromPort": 252,
              "IpProtocol": "icmp",
              "ToPort": 86
            }
          ],
          "SecurityGroupIngress": [
            {
              "CidrIp": "0.0.0.0/0",
              "Description": "from 0.0.0.0/0:3000",
              "FromPort": 3000,
              "IpProtocol": "tcp",
              "ToPort": 3000
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/EcsSecurityGroup/Resource"
        }
      },
      "EcsSecurityGroupfromEcsFargateStackALBSecurityGroupCEFB0BA030008FADA0F1": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "Description": "Load balancer to target",
          "FromPort": 3000,
          "GroupId": {
            "Fn::GetAtt": ["EcsSecurityGroup44008BF1", "GroupId"]
          },
          "IpProtocol": "tcp",
          "SourceSecurityGroupId": {
            "Fn::GetAtt": ["ALBSecurityGroup8B8624F8", "GroupId"]
          },
          "ToPort": 3000
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/EcsSecurityGroup/from EcsFargateStackALBSecurityGroupCEFB0BA0:3000"
        }
      },
      "ECSClusterF96A0E06": {
        "Type": "AWS::ECS::Cluster",
        "Properties": {
          "ClusterName": "SimpleEcs-Dev-server-cluster"
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/ECS-Cluster/Resource"
        }
      },
      "FargateTaskDefinitionTaskRoleE3C2BCAA": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "ecs-tasks.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/FargateTaskDefinition/TaskRole/Resource"
        }
      },
      "FargateTaskDefinitionTaskRoleDefaultPolicy798E9D9D": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "dynamodb:*",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": ["DynamoDbMessagesBEEF2A4C", "Arn"]
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "FargateTaskDefinitionTaskRoleDefaultPolicy798E9D9D",
          "Roles": [
            {
              "Ref": "FargateTaskDefinitionTaskRoleE3C2BCAA"
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/FargateTaskDefinition/TaskRole/DefaultPolicy/Resource"
        }
      },
      "FargateTaskDefinition8E3B365E": {
        "Type": "AWS::ECS::TaskDefinition",
        "Properties": {
          "ContainerDefinitions": [
            {
              "Cpu": 100,
              "Environment": [
                {
                  "Name": "DYNAMODB_MESSAGES_TABLE",
                  "Value": {
                    "Ref": "DynamoDbMessagesBEEF2A4C"
                  }
                },
                {
                  "Name": "APP_ID",
                  "Value": "nginx-ecs-server"
                }
              ],
              "Essential": true,
              "Image": "nginx:latest",
              "LogConfiguration": {
                "LogDriver": "awslogs",
                "Options": {
                  "awslogs-group": {
                    "Ref": "FargateTaskDefinitionNginxServerContainerLogGroup9F624A9C"
                  },
                  "awslogs-stream-prefix": "nginx-ecs-server",
                  "awslogs-region": "ap-southeast-2"
                }
              },
              "Memory": 256,
              "Name": "NginxServerContainer",
              "PortMappings": [
                {
                  "ContainerPort": 3000,
                  "Protocol": "tcp"
                }
              ]
            }
          ],
          "Cpu": "256",
          "ExecutionRoleArn": {
            "Fn::GetAtt": ["FargateTaskDefinitionExecutionRoleE69A8E33", "Arn"]
          },
          "Family": "EcsFargateStackFargateTaskDefinitionBA84EABD",
          "Memory": "512",
          "NetworkMode": "awsvpc",
          "RequiresCompatibilities": ["FARGATE"],
          "TaskRoleArn": {
            "Fn::GetAtt": ["FargateTaskDefinitionTaskRoleE3C2BCAA", "Arn"]
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/FargateTaskDefinition/Resource"
        }
      },
      "FargateTaskDefinitionExecutionRoleE69A8E33": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "ecs-tasks.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/FargateTaskDefinition/ExecutionRole/Resource"
        }
      },
      "FargateTaskDefinitionExecutionRoleDefaultPolicy1632DA52": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "ecr:BatchCheckLayerAvailability",
                  "ecr:BatchGetImage",
                  "ecr:GetAuthorizationToken",
                  "ecr:GetDownloadUrlForLayer",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": ["logs:CreateLogStream", "logs:PutLogEvents"],
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "FargateTaskDefinitionNginxServerContainerLogGroup9F624A9C",
                    "Arn"
                  ]
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "FargateTaskDefinitionExecutionRoleDefaultPolicy1632DA52",
          "Roles": [
            {
              "Ref": "FargateTaskDefinitionExecutionRoleE69A8E33"
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/FargateTaskDefinition/ExecutionRole/DefaultPolicy/Resource"
        }
      },
      "FargateTaskDefinitionNginxServerContainerLogGroup9F624A9C": {
        "Type": "AWS::Logs::LogGroup",
        "UpdateReplacePolicy": "Retain",
        "DeletionPolicy": "Retain",
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/FargateTaskDefinition/NginxServerContainer/LogGroup/Resource"
        }
      },
      "EcsServiceBC13342A": {
        "Type": "AWS::ECS::Service",
        "Properties": {
          "Cluster": {
            "Ref": "ECSClusterF96A0E06"
          },
          "DeploymentConfiguration": {
            "MaximumPercent": 200,
            "MinimumHealthyPercent": 50
          },
          "DesiredCount": 2,
          "EnableECSManagedTags": false,
          "HealthCheckGracePeriodSeconds": 60,
          "LaunchType": "FARGATE",
          "LoadBalancers": [
            {
              "ContainerName": "NginxServerContainer",
              "ContainerPort": 3000,
              "TargetGroupArn": {
                "Ref": "ALBAlbListenerTargetGroup63EEA76C"
              }
            }
          ],
          "NetworkConfiguration": {
            "AwsvpcConfiguration": {
              "AssignPublicIp": "DISABLED",
              "SecurityGroups": [
                {
                  "Fn::GetAtt": ["EcsSecurityGroup44008BF1", "GroupId"]
                }
              ],
              "Subnets": [
                {
                  "Ref": "VpcPrivateSubnet1Subnet536B997A"
                },
                {
                  "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                }
              ]
            }
          },
          "TaskDefinition": {
            "Ref": "FargateTaskDefinition8E3B365E"
          }
        },
        "DependsOn": [
          "ALBAlbListener025BAE55",
          "ALBAlbListenerTargetGroup63EEA76C",
          "FargateTaskDefinitionTaskRoleDefaultPolicy798E9D9D",
          "FargateTaskDefinitionTaskRoleE3C2BCAA"
        ],
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/Ecs-Service/Service"
        }
      },
      "ALBAEE750D2": {
        "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "Properties": {
          "LoadBalancerAttributes": [
            {
              "Key": "deletion_protection.enabled",
              "Value": "false"
            }
          ],
          "Scheme": "internet-facing",
          "SecurityGroups": [
            {
              "Fn::GetAtt": ["ALBSecurityGroup8B8624F8", "GroupId"]
            }
          ],
          "Subnets": [
            {
              "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
            },
            {
              "Ref": "VpcPublicSubnet2Subnet691E08A3"
            }
          ],
          "Type": "application"
        },
        "DependsOn": [
          "VpcPublicSubnet1DefaultRoute3DA9E72A",
          "VpcPublicSubnet1RouteTableAssociation97140677",
          "VpcPublicSubnet2DefaultRoute97F91067",
          "VpcPublicSubnet2RouteTableAssociationDD5762D8"
        ],
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/ALB/Resource"
        }
      },
      "ALBSecurityGroup8B8624F8": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Automatically created Security Group for ELB EcsFargateStackALB99CB0BEB",
          "SecurityGroupIngress": [
            {
              "CidrIp": "0.0.0.0/0",
              "Description": "Allow from anyone on port 80",
              "FromPort": 80,
              "IpProtocol": "tcp",
              "ToPort": 80
            }
          ],
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/ALB/SecurityGroup/Resource"
        }
      },
      "ALBSecurityGrouptoEcsFargateStackEcsSecurityGroup82BBE9AA3000FEE77004": {
        "Type": "AWS::EC2::SecurityGroupEgress",
        "Properties": {
          "Description": "Load balancer to target",
          "DestinationSecurityGroupId": {
            "Fn::GetAtt": ["EcsSecurityGroup44008BF1", "GroupId"]
          },
          "FromPort": 3000,
          "GroupId": {
            "Fn::GetAtt": ["ALBSecurityGroup8B8624F8", "GroupId"]
          },
          "IpProtocol": "tcp",
          "ToPort": 3000
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/ALB/SecurityGroup/to EcsFargateStackEcsSecurityGroup82BBE9AA:3000"
        }
      },
      "ALBAlbListener025BAE55": {
        "Type": "AWS::ElasticLoadBalancingV2::Listener",
        "Properties": {
          "DefaultActions": [
            {
              "TargetGroupArn": {
                "Ref": "ALBAlbListenerTargetGroup63EEA76C"
              },
              "Type": "forward"
            }
          ],
          "LoadBalancerArn": {
            "Ref": "ALBAEE750D2"
          },
          "Port": 80,
          "Protocol": "HTTP"
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/ALB/AlbListener/Resource"
        }
      },
      "ALBAlbListenerTargetGroup63EEA76C": {
        "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties": {
          "HealthCheckPath": "/api/",
          "Port": 80,
          "Protocol": "HTTP",
          "TargetGroupAttributes": [
            {
              "Key": "stickiness.enabled",
              "Value": "false"
            }
          ],
          "TargetType": "ip",
          "VpcId": {
            "Ref": "Vpc8118EB11"
          }
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/ALB/AlbListener/TargetGroup/Resource"
        }
      },
      "CDKMetadata": {
        "Type": "AWS::CDK::Metadata",
        "Properties": {
          "Analytics": "v2:deflate64:H4sIAAAAAAAA/32QQU/jMBCFfwt310t7QOyxdAFVQmzUIK6riTOEoY4decapqij/HSVu07BInOabN8/WvFnp5c1KL6/gwAtT7heWCt3lAmav4MD/uvLooPZlobsXKCyqzZsboVdoVrp7bcwgvWYblcXCkslj4VAG7UI7HwWn50m/aGtmbwiEvJvMA9xvs6E8gzyC4AGOKgvUguDl460TDA4nQ9rk1K1FwLzX6ETlaGIgOT4GH5txhx+FrasCMn/T70d5SM6629jIgmEwnfEBQgVDKt7/wTdydM70v+KdADkMM+30NsfQkkl3Stgrglp3O5+uN9bMWzJj3ES9sr5i3T35akp05l6hBRYy1kNZgAVnyFXtSnfrprFkxsM/eSjvxllK9KWf+4gF3clz5tn8BUKFMu0wa/te7ZB9DCnc3yhNFLWJLL6eDy78ZZQF31KJ4Q4Y1ZoZJReoyFW9cr5E/cG/2uWtXv7W11cfTLQI0QnVqHepfgL4Uij35wIAAA=="
        },
        "Metadata": {
          "aws:cdk:path": "EcsFargateStack/CDKMetadata/Default"
        }
      }
    },
    "Outputs": {
      "TableName": {
        "Value": {
          "Ref": "DynamoDbMessagesBEEF2A4C"
        }
      }
    },
    "Parameters": {
      "BootstrapVersion": {
        "Type": "AWS::SSM::Parameter::Value<String>",
        "Default": "/cdk-bootstrap/hnb659fds/version",
        "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
      }
    },
    "Rules": {
      "CheckBootstrapVersion": {
        "Assertions": [
          {
            "Assert": {
              "Fn::Not": [
                {
                  "Fn::Contains": [
                    ["1", "2", "3", "4", "5"],
                    {
                      "Ref": "BootstrapVersion"
                    }
                  ]
                }
              ]
            },
            "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
          }
        ]
      }
    }
  }
  